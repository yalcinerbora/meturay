{
    "version": 3,
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 20,
        "patch": 0
    },
    "configurePresets": [
    {
        "name": "folders",
        "displayName": "Default folders",
        "description": "this config only provies binary dir",
        "binaryDir": "${sourceDir}/../../Bin/Build",
        "installDir": "${sourceDir}/../../Bin/Install",
        "cacheVariables": {
            "MRAY_USE_OPTIX": false
        }
    },
    {
        "name": "Win-VS-2022",
        "displayName": "VS-2022 Ninja x64",
        "description": "Windows Visual Studio 2022 x64",
        "inherits": "folders",
        "generator": "Ninja Multi-Config",
        "architecture": {
            "value": "x64",
            "strategy": "external"
        },
        "condition": {
            "type": "equals",
            "lhs": "${hostSystemName}",
            "rhs": "Windows"
        }
    },
    {
        "name": "Win-VS-2022-OptiX",
        "displayName": "VS-2022 Ninja x64 with OptiX",
        "description": "Windows Visual Studio 2022 x64 with OptiX",
        "inherits": "Win-VS-2022",
        "cacheVariables": {
            "MRAY_USE_OPTIX": true
        }
    },
    {
        "name": "Linux-Clang-14",
        "displayName": "Linux-Clang-14-x64",
        "description": "Linux Clang-14 using ninja multi config",
        "inherits": "folders",
        "generator": "Ninja Multi-Config",
        "condition": {
            "type": "equals",
            "lhs": "${hostSystemName}",
            "rhs": "Linux"
        },
        "cacheVariables": {
            "CMAKE_CXX_COMPILER": "clang++-14"
        }
    },
    {
        "name": "Linux-Clang-14-OptiX",
        "displayName": "Linux-Clang-14-x64 with OptiX",
        "description": "Linux Clang-14 using ninja multi config and using OptiX",
        "inherits": "Linux-Clang-14",
        "cacheVariables": {
            "MRAY_USE_OPTIX": true
        }
    },
    {
        "name": "Linux-GCC-11",
        "displayName": "Linux-GCC-11-x64",
        "description": "Linux GCC-11 using ninja multi config",
        "inherits": "folders",
        "generator": "Ninja Multi-Config",
        "condition": {
            "type": "equals",
            "lhs": "${hostSystemName}",
            "rhs": "Linux"
        },
        "cacheVariables": {
            "CMAKE_CXX_COMPILER": "g++-11"
        }
    },
    {
        "name": "Linux-GCC-11-OptiX",
        "displayName": "Linux-GCC-11-x64 with OptiX",
        "description": "Linux GCC-11 using ninja multi config and using OptiX",
        "inherits": "Linux-GCC-11",
        "cacheVariables": {
            "MRAY_USE_OPTIX": true
        }
    }
    ],
    "buildPresets": [
	{
        "name": "dbg-win",
        "description": "Debug Build",
        "displayName": "Debug",
        "configuration": "Debug",
        "configurePreset": "Win-VS-2022-OptiX"
    },
	{
        "name": "rel-win",
        "description": "Release Build",
        "displayName": "Release",
        "configuration": "Release",
        "configurePreset": "Win-VS-2022-OptiX"
    },
    {
        "name": "dbg-clang",
        "description": "Debug Build",
        "displayName": "Debug",
        "configuration": "Debug",
        "configurePreset": "Linux-Clang-14-OptiX"
    },
    {
        "name": "rel-clang",
        "description": "Release Build",
        "displayName": "Release",
        "configuration": "Release",
        "configurePreset": "Linux-Clang-14-OptiX"
    }]
}